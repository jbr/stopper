name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [nightly, stable]

    steps:
    - uses: actions/checkout@master
    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.7.3

    - name: tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all

  check_fmt_and_docs:
    name: Checking fmt, clippy, and docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - uses: giraffate/clippy-action@v1
      with:
        reporter: 'github-pr-review'
        github_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: fmt
      run: cargo fmt --all -- --check

    - name: Build Documentation
      run: cargo doc --all --no-deps

  miri:
    name: "Miri"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Miri
        run: |
          rustup toolchain install nightly --component miri
          rustup override set nightly
          cargo miri setup
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Test with Miri
        run: cargo miri nextest run
        continue-on-error: true

  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Collect coverage data
        run: cargo llvm-cov nextest --codecov --output-path codecov.json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          slug: jbr/stopper
